@model ClienteWebMVC.Models.Pedido.EncabezadoPedidosModel

@{
    ViewData["Title"] = "Gestion";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<nav class="navbar navbar-expand-sm navbar-light bg-light" style="margin-top:67px;">
    <div class="collapse navbar-collapse" id="navbarNav">
        <ul class="nav nav-tabs">
            <li class="nav-item">
                <a data-toggle="tab" class="nav-link" href="#home1">Gestión Pedido</a>
            </li>

        </ul>
    </div>
</nav>
<div class="card o-hidden border-0 shadow-lg my-n2">
    <div class="tab-content">
        <br />
        @* Persona *@
        <div class="tab-pane active" id="home1">
            <form class="user" style="margin:2%">
                <div class="form-group row">

                    <div class="col-sm-3 mb-3 mb-lg-3" hidden>
                        @Html.Hidden("id")
                    </div>
                    <div class="col-sm-3 mb-3 mb-lg-3">
                        <label class="col-form-label" for="clientePersonaId">Cliente</label>
                        @Html.DropDownList("clientePersonaId", null, "Buscar Persona", htmlAttributes: new { @class = "js-example-responsive form-control", @required = "required", @style = "width: 100%;" })
                    </div>
                    <div class="col-sm-3 mb-3 mb-lg-3">
                        <label class="col-form-label" for="usuarioId">Usuario</label>
                        @Html.Editor("usuarioId", new { htmlAttributes = new { @class = "form-control", @placeholder = "Usuario Actual", @readonly = "readonly" } })
                    </div>
                    <div class="col-sm-3 mb-3 mb-lg-3 estado" style="display:none">
                        <label class="col-form-label" for="estado">Estado</label>
                        @Html.CheckBoxFor(Model => Model.estado, new { @class = "form-control check", @checked = Model.estado })
                    </div>
                    <div class="card col-sm-12 mb-12 mb-lg-12 buscarProducto" style="display:none">
                        <div class="card-body">
                            <div class="form-group">
                                <div class="col-sm-12 mb-12 mb-lg-12 row">
                                    <div class="col-sm-3 mb-3 mb-lg-3 row">
                                        <select id="productoId" name="productoId" class="form-control form-select js-example-responsive" style="width: 100%;">
                                            <option selected>Buscar Producto...</option>
                                        </select>
                                    </div>&nbsp;
                                    <div class="col-sm-3 mb-3 mb-lg-3 row">
                                        <input id="porcentajeIva" name="porcentajeIva" type="text" class="form-control" placeholder="Iva" readonly onkeyUp="return miles(this.id)" />
                                    </div>&nbsp;
                                    <div class="col-sm-3 mb-3 mb-lg-3 row">
                                        <input id="valorUnitario" name="valorUnitario" type="text" class="form-control" placeholder="Valor Unitatio" onkeyup="return miles(this.id)" />
                                    </div>
                                    <div class="col-sm-3 mb-3 mb-lg-3">
                                        <div class="input-group">
                                            <input id="cantidad" type="text" class="form-control" placeholder="Cantidad" aria-label="Cantidad" onkeyup="return miles(this.id)">
                                            <button class="btn btn-sm btn-outline-secondary border-danger" type="button" id="btnCrear">Agregar</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <br />
                    <div @*style="width:99.5%; margin:0 auto;"*@ class="card col-sm-12 mb-12 mb-lg-12">
                        <div class="card-body ">
                            <table id="tableDetalle" class="table-bordered table-hover display compact" style="width:100%">
                                <thead>
                                    <tr>
                                        <th style="text-align:center">Id Codigo</th>
                                        <th style="text-align:center">Producto</th>
                                        <th style="text-align:center">Cantidad</th>
                                        <th style="text-align:right">% Iva</th>
                                        <th style="text-align:right">Valor Unitario</th>
                                        <th style="text-align: center; max-width: 100px">Acción</th>
                                    </tr>
                                </thead>
                                <tbody></tbody>
                                <tfoot>
                                    <tr>
                                        <td style="text-align:center" colspan="4">Totales</td>
                                        <td style="text-align:center;max-width:100px">
                                            <h6 type="text">Total Neto: $</h6><br />
                                            <h6 type="text">Total Iva: $</h6><br />
                                            <h6 type="text">Total: $</h6>
                                        </td>
                                        <td style="text-align: right; max-width: 100px ">
                                            <input type="text" class="form-control" id="valorNeto" readonly style="text-align:right" /><br />
                                            <input type="text" class="form-control" id="valorIva" readonly style="text-align:right" /><br />
                                            <input type="text" class="form-control" id="valorTotal" readonly style="text-align:right" />
                                        </td>
                                    </tr>
                                </tfoot>
                            </table>
                        </div>
                    </div>
                    <div class="col-sm-3 mb-3 mb-lg-3">
                        <a class="fa fa-reply" asp-action="GetPedidos">Back to List</a>
                    </div>
                </div>
            </form>
        </div>
    </div>
</div>
<script>
    var apiServicioPersonas = localStorage.getItem("ServicioPersonas");
    var apiServiciosNetCore = localStorage.getItem("ServiciosNetCore");
    var update = false;
    var id = '@ViewBag.idString';
    var listDetallePedidos = [];
    $(document).ready(function () {
        $(".collapse-inner").select2();

        if (id != "") {
            update = true;
            $(".estado").show();
        } else {
            $(".estado").hide();
        }
    });

    $("#clientePersonaId").change(function () {
        debugger
        var cliente = parseInt($("#clientePersonaId").val());
        if (cliente > 0) {
            $(".buscarProducto").show();
        } else {
            $(".buscarProducto").hide();
        }
    });

    $("#btnCrear").click(function () {
        debugger
        if (update == false) {
            debugger
            var productoId = parseInt($('#productoId').val());
            var cantidad = $('#cantidad').val();
            var porcentajeIva = $('#porcentajeIva').val();
            var valorUnitario = $('#valorUnitario').val();
            var clientePersonaId = parseInt($("#clientePersonaId").val());
            var estado = $("#estado").prop("checked");

            if (cantidad == "" || cantidad == undefined) {
                toastr.warning("la Cantidad debe ser superior a 0!"); return;
            }
            if (productoId > 0) { } else { toastr.warning("Debes seleccionar un producto!"); return;}
            listDetallePedidos = [];
            b = { productoId: productoId, cantidad: cantidad, porcentajeIva: porcentajeIva, valorUnitario: valorUnitario };
            listDetallePedidos.push(b);

            var entidad = {
                clientePersonaId: clientePersonaId,
                detallePedidos: listDetallePedidos,
                estado: estado,
            }
            if (cantidad != "" && cantidad != undefined && productoId > 0 && clientePersonaId > 0) {
                $.ajax({
                    url: `${apiServiciosNetCore}/api/ServicioPedidos/CrearPedido`,
                    type: 'POST',
                    contentType: "application/json; charset=utf-8",
                    dataType: 'JSON',
                    cache: false,
                    traditional: true,
                    async: true,
                    data: JSON.stringify(entidad),
                    header: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    success: function (response) {
                        debugger
                        if (response.resul > 0) {
                            id = response.resul;
                            $("#id").val(response.resul);
                            update = true;                          
                            toastr.success(response.mensaje);
                            getPedidoConDetalle(response.resul);
                        } else {
                            toastr.warning(response.mensaje);
                        }
                    },
                    error: function (data) {
                        toastr.error("No pudimos completar tu solicitud!");
                    }
                });
            }           
        }
        else
            if (id != "" && id != undefined)
            {
                var entidad = {
                    clientePersonaId: clientePersonaId,
                    detallePedidos: listDetallePedidos,
                    estado: estado,
                }
                if (true) {
                    $.ajax({
                        url: `${apiServiciosNetCore}/api/ServicioPedidos/ActualizarPedidoEncabezado`,
                        type: 'PUT',
                        contentType: "application/json; charset=utf-8",
                        dataType: 'JSON',
                        cache: false,
                        traditional: true,
                        async: true,
                        data: JSON.stringify(entidad),
                        header: {
                            'Accept': 'application/json',
                            'Content-Type': 'application/json'
                        },
                        success: function (response) {

                            if (response.ok) {
                                toastr.success(response.mensaje);
                            } else {
                                toastr.warning(response.mensaje);
                            }
                        },
                        error: function (data) {
                            toastr.error("No pudimos completar tu solicitud!");
                        }
                    });
                }
            }
            else
            {
            toastr.warning("selecciona una accion!");
            }
    });

    function getPedidoConDetalle(id) {
        if (id > 0) {
            $.ajax({
                url: `${apiServiciosNetCore}/api/ServicioPedidos/GetPedido`,
                type: 'get',
                contentType: "application/json; charset=utf-8",
                dataType: 'JSON',
                cache: false,
                traditional: true,
                async: true,
                data: {id:id},
                header: {
                    'Accept': 'application/json',
                    'Content-Type': 'application/json'
                },
                success: function (data) {
                    debugger
                    if (true) {
                        //$('#tableDetalle').dataTable().destroy();
                        $('#tableDetalle').find('tbody').empty();
                        for (var i = 0; i < data.detallePedidos.length; i++) {
                            $('#tableDetalle').find('tbody').append(
                                `<tr>
                                    <td align="center">${data.detallePedidos[i].productoId}</td>
                                    <td align="center">${data.detallePedidos[i].productoId}</td>
                                    <td align="center">${data.detallePedidos[i].cantidad}</td>
                                    <td align="right">${data.detallePedidos[i].porcentajeIva}</td>
                                    <td align="right">${data.detallePedidos[i].valorUnitario}</td>
                                    <td align="center;max-width: 100px">
                                        <button type="button" class="btn btn-warning btn-xs" onclick="BorrarPedido(${data.detallePedidos[i].id})">
                                         <i class="fa fa-trash"></i>&nbsp;Borrar&nbsp;&nbsp;
                                        </button>
                                    </td>
                                </tr >`);
                        }
                        $('#valorNeto').val(data.valorNeto);
                        $('#valorIva').val(data.valorIva);
                        $('#valorTotal').val(data.valorTotal);
                    }
                },
                error: function (data) {
                    toastr.error("No pudimos completar tu solicitud!");
                }
            });
        }


    }

    //busca una persona dinamicamente por coincidencia de nombres y apellidos max 10 dropList
    $('#clientePersonaId').select2({
        ajax: {
            url: `${apiServicioPersonas}/api/ServicioPersonas/GetPersonasDropList`,
            cache: false,
            tags: "true",
            placeholder: "Select an option",
            allowClear: true,
            width: 'resolve',
            data: function (params) {
                var query = {
                    buscar: params.term,
                    page: params.page || 1
                }
                return query;
            },
            processResults: function (data, params) {
                return {
                    "results": data,
                    "pagination": {
                        "more": false
                    }
                }
            }
        }
    });

    $('#productoId').select2({
        ajax: {
            url: `${apiServiciosNetCore}/api/ServicioProductos/GetProductoDropList`,
            cache: false,
            tags: "true",
            placeholder: "Select an option",
            allowClear: true,
            width: 'resolve',
            data: function (params) {
                var query = {
                    buscar: params.term,
                    page: params.page || 1
                }
                return query;
            },
            processResults: function (data, params) {
                debugger
                return {
                    "results": data,
                    "pagination": {
                        "more": false
                    }
                }
            }
        }
    });

    $('#productoId').on("change", function (e) {
        debugger
        //$('#porcentajeIva').val(e.val).trigger("change");
        var data = $(this).select2('data');
        $('#porcentajeIva').val(data[0].iva).trigger("change");
        $('#valorUnitario').val(data[0].valor).trigger("change");
    })

    var numero_miles = "";

    function formatNumber(n) {

        const array_number = n.split(',');
        var complemento = "";
        n = String(array_number[0]).replace(/\D/g, "");
        if (array_number.length > 1) {
            m = String(array_number[1]).replace(/\D/g, "");
            complemento = `,${m}`;
        }
        return n === '' ? n : String(n).replace(/\B(?=(\d{3})+(?!\d))/g, ".") + complemento;
    }

    function miles(id) {

        numero_miles = formatNumber($(`#${id}`).val());
        $(`#${id}`).val(numero_miles);
    }

    function addCommas(nStr) {
        nStr += '';
        x = nStr.split('.');
        x1 = x[0];
        x2 = x.length > 1 ? '.' + x[1] : '';
        var rgx = /(\d+)(\d{3})/;
        while (rgx.test(x1)) {
            x1 = x1.replace(rgx, '$1' + '.' + '$2');
        }
        return x1 + x2;
    }

    function quitCommas(nStr) {
        nStr.toString();
        var s = nStr.replace(/\./g, "");
        return s;
    }
</script>

